set-option -g default-command "reattach-to-user-namespace -l zsh"

set-window-option -g xterm-keys on

# Use C-a like screen but also allow C-a through too
unbind C-b
unbind l
set -g prefix C-a
bind C-a send-prefix

# Ensure that the sessions behave correctly
# set  -g  default-terminal "screen-256color"
set  -g  default-terminal "tmux-256color"
set  -sg escape-time      0
set  -sg repeat-time      0
set  -g  base-index       1
setw -g  pane-base-index  1
setw -g  monitor-activity on
set  -g  visual-activity  on

# Enable simple reloading
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# setw -g mode-keys vi
bind -r        h   select-pane  -L
bind -r        l   select-pane  -R
bind -r        j   select-pane  -D
bind -r        k   select-pane  -U

bind -rn    M-Up  resize-pane  -U 5
bind -rn  M-Down  resize-pane  -D 5
bind -rn  M-Left  resize-pane  -L 5
bind -rn M-Right  resize-pane  -R 5

# Vim-tmux-navigation keys
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Add mouse support
setw -g mouse on
# bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
# ** Wheel scroll in pane
# unbind -T root WheelUpPane
# unbind -T root WheelDownPane

# setw -g automatic-rename off
set-option -g renumber-windows on

# Save scrollback buffer
bind-key P command-prompt -p 'Save scrollback:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'


# Some generate key bindings just to make things easier
bind c new-window \; command-prompt "rename-window '%%'"

# Open windows in the same directory as before please...
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
# bind c new-window -c "#{pane_current_path}"

# set-option display-time 1000

set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour4
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

# Window styles
set-window-option -g window-style 'bg=#2f2f2f'
set-window-option -g window-active-style 'bg=#1e1e1e'
# set-window-option -g pane-active-border-style ''


set -g status-left '#[fg=colour252,nobold]⮂#[fg=colour235,bg=colour252,bold]#(whoami) ❐:#S#[fg=colour234]⮁#[fg=colour235] ⬒:#P #[fg=colour252,bg=colour234,nobold]⮀'

set -g window-status-format "#[fg=colour235,bg=colour234,nobold]⮂#[fg=colour4,bg=colour235,bold]#I#[fg=colour234]⮁#[fg=colour4,nobold] #W #[fg=colour235,bg=colour234,nobold]⮀"
set -g window-status-current-format "#[fg=colour4,bg=colour234,nobold]⮂#[fg=colour16,bg=colour4,bold]#I#[fg=colour234]⮁#[fg=colour16,bold] #W #[fg=colour4,bg=colour234,nobold]⮀"

set -g status-right '#[fg=colour252,nobold]⮂#[fg=colour235,bg=colour252] #h #[fg=colour234,bold]⮃%d %b - %R #[fg=colour252,bg=colour234,nobold]⮀'

